function fhandle = dump(h, dir)
% Dump files in CodeHashArray into dir, returns handle to main function

if ~exist('dir', 'var')
    dir = pwd;
end
anonymousFunctionCount = 1;
for i=1:numel(h.HashArray)
    finfo = h.HashArray(i);
    if isempty(finfo.file)
        finfo.file = sprintf('anonymousFunction%d.m', anonymousFunctionCount);
        anonymousFunctionCount = anonymousFunctionCount + 1;
    end
    file = fullfile(dir, finfo.file);
    % Change filesep, if necessary
    idx = find(file == '/' | file == '\');
    file(idx) = filesep;
    [pathstr, name, ext, versn] = fileparts(file);
    % Create intermediate directories, if necessary
    for j=1:numel(idx)
        thisdir = file(1:idx(j));
        if ~isdir(thisdir)
            mkdir(thisdir);
        end
    end
    [fid, msg] = fopen(file, 'w');
    if fid == -1
        error('Unable to create file %s. Message: %s', file, msg);
    end
    if isempty(finfo.mfile)
        warning('Unable to recreate function %s', finfo.function);
    elseif ischar(finfo.mfile)
        fprintf(fid, finfo.mfile);
    elseif iscell(finfo.mfile)
        % Cell containing a workspace structure for anonymous functions
        matfile = fullfile(pathstr, [name '.mat']);
        workspace = finfo.mfile{1};
        save(matfile, '-struct', 'workspace');
        varNames = fieldnames(workspace);
        fVar = genvarname('f', varNames);
        outVar = genvarname('out', varNames);
        fprintf(fid, 'function %s = %s(varargin)\n', outVar, name);
        fprintf(fid, '%% M-File autogenerated from an anonymous function\n');
        fprintf(fid, 'persistent');
        fprintf(fid, ' %s', varNames{:});
        % Find a workspace variable that isn't empty
        for j=1:numel(varNames)
            if ~isempty(workspace.(varNames{j}))
                fprintf(fid, '\nif isempty(%s)\n', varNames{j});
                fprintf(fid, ['    warning(''This M-file was automatically generated '...
                    'from an anonymous function. It may be slow and/or incorrect.'');\n']);
                fprintf(fid, '    load %s %% Load workspace\nend\n', name);
            end
        end
        fprintf(fid, '%s = %s;\n', fVar, finfo.function);
        fprintf(fid, '%s = %s(varargin{:});\n', outVar, fVar);
    else
        error('Unknown data in mfile field.')
    end
    fclose(fid);
    if i==1
        fhandle = str2func(name);
    end
end